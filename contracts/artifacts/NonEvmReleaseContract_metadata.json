{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_evmBridge",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_tokenAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "evmBridge",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "tokenContract",
						"type": "address"
					}
				],
				"name": "ContractDeployed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "targetChain",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TokensLocked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "TokensReleased",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "evmBridge",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "targetChain",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					}
				],
				"name": "lockERC20",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "targetChain",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					}
				],
				"name": "lockETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "releaseTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Constructor to set the EVM bridge address and ERC20 token contract. _evmBridge The address of the EVM bridge contract. _tokenAddress The address of the ERC20 token contract."
				},
				"lockETH(address,address)": {
					"notice": "Locks native ETH in this contract to be transferred to another chain. targetChain The address of the target chain where the ETH will be moved. receiver The address on the target chain to receive the ETH."
				},
				"releaseTokens(address,uint256)": {
					"notice": "Function to release tokens on the non-EVM chain on confirmation from the EVM side. receiver The address to receive the released tokens. amount The amount of tokens to release."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Release.sol": "NonEvmReleaseContract"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"contracts/Release.sol": {
			"keccak256": "0xbf37ee28d0a45996469f17a375b58832dd2e50d2ffae7729f603c5941afc6609",
			"license": "MIT",
			"urls": [
				"bzz-raw://2dd2496792fe9475a44f1c8088cd7da8b269781f995fef6f7fd47299f200b2ca",
				"dweb:/ipfs/QmWmoicDJRkwZViLSd5zX3gXEcsEh6GsebY6VeBo92fCPb"
			]
		},
		"contracts/TokenLock.sol": {
			"keccak256": "0xd483cf243383f9fbbf7e74db877c92d74e7bffc7b83a28a8a94390940fe2ad46",
			"license": "MIT",
			"urls": [
				"bzz-raw://a5284723b1c1ed09f3d750668c482ee93b9e84369b57d22b8970b67224f6c8a4",
				"dweb:/ipfs/QmYPs5b8kmboDSwPioks8iKy6wC58J6FtKAkN5sRALwHyG"
			]
		}
	},
	"version": 1
}